server {
    listen [::]:${AUTH_PORT};
    listen ${AUTH_PORT};

    server_name auth;

    location / {
        proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
        proxy_set_header X-Forward-For ${DOLLAR}proxy_add_x_forwarded_for;
        proxy_set_header Host ${DOLLAR}http_host;

        proxy_pass http://auth_backend:${AUTH_PORT};
    }
}

server {
    listen [::]:${BALANCE_PORT};
    listen ${BALANCE_PORT};

    server_name balance;

    location / {
        proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
        proxy_set_header X-Forward-For ${DOLLAR}proxy_add_x_forwarded_for;
        proxy_set_header Host ${DOLLAR}http_host;

        proxy_pass http://balance_backend:${BALANCE_PORT};
    }
}

server {
    listen [::]:${COLLECTION_PORT};
    listen ${COLLECTION_PORT};

    server_name collection;

    location / {
        proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
        proxy_set_header X-Forward-For ${DOLLAR}proxy_add_x_forwarded_for;
        proxy_set_header Host ${DOLLAR}http_host;

        proxy_pass http://collection_backend:${COLLECTION_PORT};
    }
}

server {
    listen [::]:${FILE_PORT};
    listen ${FILE_PORT};

    server_name file;

    location / {
        proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
        proxy_set_header X-Forward-For ${DOLLAR}proxy_add_x_forwarded_for;
        proxy_set_header Host ${DOLLAR}http_host;

        proxy_pass http://file_backend:${FILE_PORT};
    }
}

server {
    listen ${PORT};
    listen [::]:${PORT};

    server_name main;

    location / {
        set_by_lua ${DOLLAR}upstream '
            local upstreams = {
                "http://auth_backend:${AUTH_PORT}",
                "http://balance_backend:${BALANCE_PORT}",
                "http://collection_backend:${COLLECTION_PORT}",
                "http://file_backend:${FILE_PORT};"
            };

            for _, value in pairs(upstreams) do
                if string.find(value, ngx.req.get_headers("X-Request-Server")) then
                    return var;
                end
            end

            return "http://error_backend${ERROR_PORT}";
        ';

        proxy_pass ${DOLLAR}upstream;
    }

    proxy_intercept_errors on;

    error_page 400 = @400;
	location @400 {return 400 '{"ok": False, "error": "BAD_REQUEST"}';}

	error_page 401 = @401;
	location @401 {return 401 '{"ok": False, "error": "UNAUTHORIZED"}';}

	error_page 402 = @402;
	location @402 {return 402 '{"ok": False, "error": "PAYMENT_REQUIRED"}';}

	error_page 403 = @403;
	location @403 {return 403 '{"ok": False, "error": "FORBIDDEN"}';}

	error_page 404 = @404;
	location @404 {return 404 '{"ok": False, "error": "NOT_FOUND"}';}

	error_page 405 = @405;
	location @405 {return 405 '{"ok": False, "error": "METHOD_NOT_ALLOWED"}';}

	error_page 406 = @406;
	location @406 {return 406 '{"ok": False, "error": "NOT_ACCEPTABLE"}';}

	error_page 407 = @407;
	location @407 {return 407 '{"ok": False, "error": "PROXY_AUTHENTICATION_REQUIRED"}';}

	error_page 408 = @408;
	location @408 {return 408 '{"ok": False, "error": "REQUEST_TIMEOUT"}';}

	error_page 409 = @409;
	location @409 {return 409 '{"ok": False, "error": "CONFLICT"}';}

	error_page 410 = @410;
	location @410 {return 410 '{"ok": False, "error": "GONE"}';}

	error_page 411 = @411;
	location @411 {return 411 '{"ok": False, "error": "LENGTH_REQUIRED"}';}

	error_page 412 = @412;
	location @412 {return 412 '{"ok": False, "error": "PRECONDITION_FAILED"}';}

	error_page 413 = @413;
	location @413 {return 413 '{"ok": False, "error": "PAYLOAD_TOO_LARGE"}';}

	error_page 414 = @414;
	location @414 {return 414 '{"ok": False, "error": "URI_TOO_LONG"}';}

	error_page 415 = @415;
	location @415 {return 415 '{"ok": False, "error": "UNSUPPORTED_MEDIA_TYPE"}';}

	error_page 416 = @416;
	location @416 {return 416 '{"ok": False, "error": "RANGE_NOT_SATISFIABLE"}';}

	error_page 417 = @417;
	location @417 {return 417 '{"ok": False, "error": "EXPECTATION_FAILED"}';}

	error_page 418 = @418;
	location @418 {return 418 '{"ok": False, "error": "IM_A_TEAPOT"}';}

	error_page 421 = @421;
	location @421 {return 421 '{"ok": False, "error": "MISDIRECTED_REQUEST"}';}

	error_page 422 = @422;
	location @422 {return 422 '{"ok": False, "error": "UNPROCESSABLE_ENTITY"}';}

	error_page 423 = @423;
	location @423 {return 423 '{"ok": False, "error": "LOCKED"}';}

	error_page 424 = @424;
	location @424 {return 424 '{"ok": False, "error": "FAILED_DEPENDENCY"}';}

	error_page 425 = @425;
	location @425 {return 425 '{"ok": False, "error": "TOO_EARLY"}';}

	error_page 426 = @426;
	location @426 {return 426 '{"ok": False, "error": "UPGRADE_REQUIRED"}';}

	error_page 428 = @428;
	location @428 {return 428 '{"ok": False, "error": "PRECONDITION_REQUIRED"}';}

	error_page 429 = @429;
	location @429 {return 429 '{"ok": False, "error": "TOO_MANY_REQUESTS"}';}

	error_page 431 = @431;
	location @431 {return 431 '{"ok": False, "error": "REQUEST_HEADER_FIELDS_TOO_LARGE"}';}

	error_page 451 = @451;
	location @451 {return 451 '{"ok": False, "error": "UNAVAILABLE_FOR_LEGAL_REASONS"}';}

	error_page 500 = @500;
	location @500 {return 500 '{"ok": False, "error": "INTERNAL_SERVER_ERROR"}';}

	error_page 501 = @501;
	location @501 {return 501 '{"ok": False, "error": "NOT_IMPLEMENTED"}';}

	error_page 502 = @502;
	location @502 {return 502 '{"ok": False, "error": "BAD_GATEWAY"}';}

	error_page 503 = @503;
	location @503 {return 503 '{"ok": False, "error": "SERVICE_UNAVAILABLE"}';}

	error_page 504 = @504;
	location @504 {return 504 '{"ok": False, "error": "GATEWAY_TIMEOUT"}';}

	error_page 505 = @505;
	location @505 {return 505 '{"ok": False, "error": "HTTP_VERSION_NOT_SUPPORTED"}';}

	error_page 506 = @506;
	location @506 {return 506 '{"ok": False, "error": "VARIANT_ALSO_NEGOTIATES"}';}

	error_page 507 = @507;
	location @507 {return 507 '{"ok": False, "error": "INSUFFICIENT_STORAGE"}';}

	error_page 508 = @508;
	location @508 {return 508 '{"ok": False, "error": "LOOP_DETECTED"}';}

	error_page 510 = @510;
	location @510 {return 510 '{"ok": False, "error": "NOT_EXTENDED"}';}

	error_page 511 = @511;
	location @511 {return 511 '{"ok": False, "error": "NETWORK_AUTHENTICATION_REQUIRED"}';}
}
